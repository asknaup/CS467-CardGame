<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, intial-scale=1.0">
  <title>Card View Page</title>
  <link rel="stylesheet" href="global.css">
  <link rel="stylesheet" href="styles.css">
</head>

<body>
  <h2>{{ card.name}} the {{ card.rarity}} was added to your collection</h2>

  <div id="cardContainer">
    {{!-- <div class="card">
      <img src="{{ card.URL}}" alt="Card Image">
      <p>Name: {{ card.name}}</p>
      <p>Creature: {{ card.rarity}}</p>
    </div> --}}

    <a href="/cardGenPage">
      <button>Generate another Card</button>
    </a>
  </div>


  <div class="cardContainer" id="cardContainer">
  </div>
  <script src="/bulkHelper.js"></script>

  <!-- Your client-side code -->
  <script>
    async function handleCardCreation() {
      try {
        // Make a fetch request to the server
        const response = await fetch('/cardViewPrintedPage', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          // Include any necessary request data
          body: JSON.stringify({ /* include any necessary request data */ }),
        });

        if (!response.ok) {
          throw new Error(`Failed to fetch data: ${response.statusText}`);
        }

        // Parse the JSON response from the server
        const responseData = await response.json();

        // Extract the cardData from the response
        const cardData = responseData.cardData;
        console.log("CARD DATA CLIENT SIDE OUTPUT:", cardData);

        // Call createTradingCard with the received cardData
        const cardElement = await bulkHelper.createTradingCard(cardData);
        document.getElementById('cardContainer').appendChild(cardElement);
      } catch (error) {
        console.error('Error creating trading card:', error);
      }
    }

    // Call the function when needed
    handleCardCreation();
  </script>
  
</body>

</html>